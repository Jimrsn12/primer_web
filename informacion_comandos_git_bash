Comandos Básicos para Trabajar con Git

1. Verificar el estado del repositorio:
   Muestra los archivos modificados, añadidos o eliminados.
   git status

2. Añadir archivos al área de preparación (staging):
   - Para añadir un archivo específico:
     git add archivo.html
   - Para añadir todos los archivos modificados:
     git add .

3. Realizar un commit:
   Guarda los cambios con un mensaje descriptivo.
   git commit -m "Mensaje del commit"

4. Ver los cambios en el repositorio:
   Muestra los cambios realizados (antes de hacer un commit).
   git diff

5. Ver el historial de commits:
   Muestra una lista de los commits anteriores.
   git log

6. Subir cambios al repositorio remoto:
   Envía los cambios confirmados (commits) al repositorio remoto en GitHub.
   git push
   - Para la primera vez (si es necesario), puedes usar:
     git push -u origin master

7. Sincronizar cambios con el repositorio remoto:
   Baja los cambios del repositorio remoto (de otros colaboradores).
   git pull

8. Ver las URLs de los repositorios remotos:
   Muestra las URLs configuradas para los repositorios remotos.
   git remote -v

9. Configurar un repositorio remoto:
   Vincula tu repositorio local con un repositorio remoto en GitHub (solo la primera vez).
   git remote add origin https://github.com/tu-usuario/tu-repositorio.git

10. Eliminar un repositorio remoto:
    Elimina un remoto previamente configurado.
    git remote remove origin

-----Comandos Útiles para la Gestión del Repositorio--------------------------------------------------------------------------

1. Ver la configuración de Git:
   Muestra la configuración global de Git (nombre, correo, etc.).
   git config --list

2. Cambiar la configuración global de Git:
   - Cambiar el nombre de usuario:
     git config --global user.name "Tu Nombre"
   - Cambiar el correo electrónico:
     git config --global user.email "tu-email@dominio.com"

3. Clonar un repositorio:
   Si deseas copiar un repositorio remoto a tu máquina local:
   git clone https://github.com/tu-usuario/tu-repositorio.git

4. Crear una nueva rama:
   Crea una rama para trabajar de manera independiente.
   git checkout -b nueva-rama

5. Cambiar de rama:
   Cambia de una rama a otra.
   git checkout nombre-de-la-rama

6. Unir (merge) una rama a otra:
   Fusiona una rama (por ejemplo, nueva-rama) a la rama actual (por ejemplo, master).
   git merge nueva-rama

7. Eliminar una rama:
   Elimina una rama local que ya no necesites.
   git branch -d nombre-de-la-rama

Comandos de Deshacer Cambios

1. Deshacer cambios no confirmados (deshacer cambios en el archivo antes de hacer commit):
   git checkout -- archivo.html

2. Deshacer el último commit (mantener los cambios en el área de preparación):
   git reset --soft HEAD~1

3. Deshacer el último commit (elimina cambios y commits):
   git reset --hard HEAD~1

Ver información sobre el repositorio

1. Ver la configuración remota de un repositorio:
   git remote show origin

2. Ver la información de las ramas remotas:
   git branch -r

Pasos para sincronizar y subir cambios a GitHub

1. **Verificar los cambios remotos en GitHub**:
   Para sincronizar tu repositorio local con los cambios realizados en GitHub, ejecuta:
   git pull origin master

2. **Verificar el estado local**:
   Después de hacer el pull, verifica el estado de tu repositorio local:
   git status

3. **Modificar el código**:
   Haz los cambios necesarios en tu código usando Visual Studio Code o cualquier otro editor.

4. **Añadir los archivos modificados**:
   Después de modificar los archivos, agrégalos al área de preparación:
   - Para agregar un archivo específico:
     git add archivo_modificado
   - Para agregar todos los archivos modificados:
     git add .

5. **Realizar el commit de los cambios**:
   Después de añadir los archivos, realiza un commit para guardar los cambios en el repositorio local:
   git commit -m "Modificar archivo X o agregar funcionalidad Y"

6. **Subir los cambios al repositorio remoto en GitHub**:
   Para subir los cambios al repositorio remoto de GitHub, ejecuta:
   git push

Resumen de Comandos:

1. git pull origin master
2. git status
3. git add archivo_modificado (o git add .)
4. git commit -m "Mensaje del commit"
5. git push


